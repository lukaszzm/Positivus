---
import { Icon } from 'astro-icon';

interface Props {
	variant: 'primary' | 'secondary' | 'no-icon';
	href: string;
	textColor: 'primary' | 'secondary' | 'background';
	iconColor: 'color-1' | 'color-2' | 'color-3' | 'color-4' | 'color-5' | 'color-6';
}

const { variant, textColor, iconColor, href } = Astro.props;
---

{
	variant === 'primary' ? (
		<a href={href} class={textColor}>
			<Icon name="mi:arrow-right-up" class={`icon-1  ${iconColor}`} />
			<span>
				<slot />
			</span>
		</a>
	) : (
		<a href={href} class={textColor}>
			<span>
				<slot />
			</span>
			{variant !== 'no-icon' && <Icon name="mi:arrow-right-up" class="icon-2" />}
		</a>
	)
}

<style>
	a {
		display: flex;
		align-items: center;
		gap: 15px;
		width: auto;
		text-decoration: none;
		position: relative;
		font-size: 2.1rem;
	}

	.icon-1 {
		width: 4rem;
		border-radius: 50%;
		background-color: var(--accent);
	}

	.icon-2 {
		width: 4rem;
	}

	.primary {
		color: var(--accent);
		&:after {
			background-color: var(--accent);
		}
	}

	.secondary {
		color: var(--foreground);
		&:after {
			background-color: var(--foreground);
		}
	}

	.background {
		color: var(--background);
		&:after {
			background-color: var(--background);
		}
	}

	.color-1 {
		background-color: var(--accent);
		color: var(--background);
	}

	.color-2 {
		background-color: var(--accent);
		color: var(--foreground);
	}

	.color-3 {
		background-color: var(--foreground);
		color: var(--background);
	}

	.color-4 {
		background-color: var(--foreground);
		color: var(--accent);
	}

	.color-5 {
		background-color: var(--background);
		color: var(--foreground);
	}

	.color-6 {
		background-color: var(--background);
		color: var(--accent);
	}
</style>

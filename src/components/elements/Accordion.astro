---
import Card from './Card.astro';

interface Props {
	number: string
	title: string
	description: string
}

const { number, title, description } = Astro.props
---

<Card bgColor="muted" class="accordion" data-state="closed">
	<h3 data-state="closed" data-orientation="vertical">
		<button class="accordion__control">
			<div class="accordion__label">
				<span class="accordion__label__number">{number}</span>
				<span class="accordion__label__title">{title}</span>
			</div>
			<div class="accordion__icon">+</div>
		</button>
	</h3>
	<div data-state="closed" class="accordion__content">
		<p>{description}</p>
	</div>
</Card>

<style>
	.accordion {
		width: 100%;
		padding: 30px;
		transition: all 0.2s ease-out;
	}

	.accordion[data-state='open'] {
		background-color: var(--primary);
	}

	.accordion__control {
		width: 100%;
		display: flex;
		align-items: center;
		justify-content: space-between;
		border: none;
		cursor: pointer;
		background: transparent;
		font-family: var(--font-family), sans-serif;
		text-align: left;
	}

	.accordion__label {
		display: flex;
		align-items: center;
		justify-content: space-between;
		gap: 33px;
	}

	.accordion__label__number {
		font-size: 2.125rem;
	}

	.accordion__label__title {
		font-size: 1.5rem;
	}

	.accordion__icon {
		width: 30px;
		height: 30px;
		border: 1px solid var(--secondary);
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: var(--muted);
		border-radius: 50%;
		font-size: 2.5rem;
		font-weight: 600;
	}

	.accordion__content {
		font-size: 1.125rem;
		max-height: 0;
		overflow: hidden;
		transition: all 0.2s ease-out;
	}

	.accordion__content[data-state='closed'] {
		margin-top: 0;
	}

	.accordion__content[data-state='open'] {
		margin-top: 30px;
	}

	.accordion__content > p {
		border-top: 1px solid var(--secondary)
		padding: 30px 0;
	}

	@media (min-width: 768px) {
		.accordion {
			padding: 30px 45px;
		}

		.accordion__label {
			gap: 25px;
		}

		.accordion__label__number {
			font-size: 3.35rem;
		}

		.accordion__label__title {
			font-size: 1.5rem;
		}

		.accordion__icon {
			width: 42px;
			height: 42px;
		}
	}

	@media (min-width: 1024px) {
		.accordion {
			padding: 41px 60px;
		}

		.accordion__label {
			gap: 25px;
		}

		.accordion__label__number {
			font-size: 3.75rem;
		}

		.accordion__label__title {
			font-size: 1.875rem;
		}

		.accordion__icon {
			width: 58px;
			height: 58px;
		}
	}
</style>

<script>

	// TODO: refactor it and fix button when accordion is open

	const accordions = document.getElementsByClassName('accordion');

	for (const accordion of accordions) {
		const content = accordion.querySelector('.accordion__content');
		const button = accordion.querySelector('.accordion__control');
		const icon = accordion.querySelector('.accordion__icon');

		if (!content || !button || !icon || !(content instanceof HTMLElement) || !(button instanceof HTMLElement) || !(accordion instanceof HTMLElement)) {
			throw new Error('Accordion component is missing required elements');
		}

		button.addEventListener('click', () => {
			const isOpen = accordion.dataset.state === 'open';

			accordion.dataset.state = isOpen ? 'closed' : 'open';
			content.dataset.state = isOpen ? 'closed' : 'open';
			button.dataset.state = isOpen ? 'closed' : 'open';
			icon.textContent = isOpen ? '+' : '-';

			if (isOpen) {
				content.style.maxHeight = '0';
			} else {
				content.style.maxHeight = `${content.scrollHeight}px`;
			}
		});
	}
</script>
